// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organisation {
  id   Int      @id @default(autoincrement())
  name String
  users User[]
  tickets Ticket[]

  @@map("organisation")
}

model User {
  id                Int           @id @default(autoincrement())
  name              String
  email             String        @unique
  password          String
  role              UserRole      @default(USER)
  lastLoginAt       DateTime?     @map("last_login_at")
  createdAt         DateTime      @default(now()) @map("created_at")
  updatedAt         DateTime      @updatedAt @map("updated_at")
  organisationId    Int           @map("organisation_id")
  organisation      Organisation  @relation(fields: [organisationId], references: [id])
  tickets           Ticket[]
  refreshTokens     RefreshToken[]

  @@map("users")
  @@index([email])
  @@index([organisationId])
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int      @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  isRevoked Boolean  @default(false) @map("is_revoked")

  @@map("refresh_tokens")
  @@index([userId])
  @@index([token])
}

model Ticket {
  id             Int           @id @default(autoincrement())
  title          String
  description    String?
  status         String        @default("open")
  userId         Int           @map("user_id")
  organisationId Int           @map("organisation_id")
  createdAt      DateTime      @default(now()) @map("created_at")
  user           User          @relation(fields: [userId], references: [id])
  organisation   Organisation  @relation(fields: [organisationId], references: [id])

  @@map("tickets")
}

enum UserRole {
  ADMIN
  USER
  MANAGER
}
